------------------------------------------------------------------
-- Demo of using SVG functions to display
-- distances from major US cities

-- Author: Martin Davis  2023

-- psql -A -t -o us-us-city-distance.svg  < us-city-distance.sql
------------------------------------------------------------------

WITH usa(geom) AS (VALUES
  ('POLYGON ((-80.05115 26.79686, -80.12801 25.97717, -80.42103 25.19182, -81.11922 25.13379, -81.25641 25.80272, -81.71848 25.9232, -81.8644 26.4392, -82.39835 26.99818, -82.6861 27.47353, -82.40456 27.79132, -82.84446 27.85034, -82.6368 28.88445, -83.0369 29.17914, -83.65431 29.91075, -84.35403 30.06942, -84.85812 29.74665, -85.30667 29.7015, -85.52979 30.13149, -86.50536 30.40977, -86.45269 30.50104, -87.19341 30.35502, -87.90347 30.4211, -88.01979 30.744, -88.13568 30.33696, -88.8857 30.39809, -89.7285 30.18082, -90.23967 30.38076, -90.39548 30.09188, -89.36399 29.79657, -89.77171 29.61003, -89.19335 29.34883, -89.14435 29.01645, -89.81746 29.47741, -90.22768 29.09844, -90.34756 29.31273, -90.78281 29.12671, -90.93643 29.3433, -91.54775 29.53147, -91.61565 29.76893, -92.05963 29.6068, -92.60728 29.5884, -93.2335 29.78877, -93.72183 29.75857, -93.7602 30.00596, -94.06541 29.67408, -94.68252 29.43291, -94.73572 29.79299, -95.2484 28.97839, -95.68303 28.72695, -96.43716 28.59699, -96.39072 28.43406, -97.0264 28.10775, -97.19546 27.81222, -97.56856 26.97786, -97.25312 26.06832, -98.20069 26.05538, -99.10673 26.41953, -99.45506 27.02865, -99.54919 27.61263, -100.29792 28.28035, -100.66877 29.08007, -101.47047 29.78869, -102.32433 29.88012, -102.67636 29.74423, -103.15346 28.97868, -104.04563 29.32812, -104.53525 29.67947, -104.89068 30.57056, -105.39031 30.85308, -106.53897 31.7862, -108.20266 31.7868, -108.21006 31.34374, -111.07132 31.33553, -114.82097 32.48711, -114.72126 32.72081, -117.12723 32.53573, -117.40927 33.23406, -118.10582 33.74755, -118.40418 33.73843, -118.54094 34.03724, -118.93843 34.04007, -119.60533 34.41644, -120.45521 34.44251, -120.64029 34.57235, -120.6374 35.14005, -121.26923 35.66357, -121.95422 36.58281, -121.76033 36.81904, -122.41355 37.23918, -122.49713 37.78301, -122.08823 37.4526, -122.3786 37.97352, -122.45718 37.83429, -123.00962 37.99454, -122.99354 38.29731, -123.72077 38.92486, -123.83697 39.82652, -124.39147 40.43538, -124.10827 40.97836, -124.05677 41.45832, -124.35104 42.09884, -124.55839 42.83263, -124.1571 43.85728, -123.95538 45.29314, -123.97608 46.20288, -123.84019 46.40452, -124.16075 46.9298, -124.3723 47.63896, -124.60536 47.87394, -124.71582 48.37777, -123.9899 48.15936, -122.80165 48.08551, -122.57929 47.25157, -123.11417 47.20816, -122.72694 47.08262, -122.32414 47.3445, -122.39325 47.77436, -122.21574 48.00762, -122.51557 48.75809, -122.76383 48.99991, -95.15752 49, -95.15163 49.37174, -94.83181 49.33081, -94.57011 48.7137, -93.78094 48.51164, -92.94678 48.62844, -92.36996 48.22088, -92.03505 48.35561, -91.57144 48.04368, -90.86439 48.25431, -90.74326 48.08855, -90.14518 48.11289, -89.53059 48.00177, -90.50951 47.71005, -92.0883 46.79196, -91.92127 46.6802, -90.86154 46.95255, -90.92606 46.58556, -90.40802 46.56867, -89.79108 46.82477, -89.38657 46.85027, -88.61798 47.13119, -88.44649 46.79947, -87.66363 46.83693, -87.3714 46.50806, -86.63806 46.42232, -86.14794 46.67308, -84.95468 46.77093, -85.01656 46.47643, -84.31158 46.48865, -83.90646 45.96022, -84.68897 46.0359, -84.73168 45.85567, -85.50944 46.10192, -87.12363 45.69628, -87.83989 44.92733, -88.04031 44.57146, -87.36736 44.81157, -87.51724 44.17576, -87.87524 43.35859, -87.75673 42.77753, -87.83694 42.31421, -87.39471 41.63415, -86.61757 41.90741, -86.28495 42.42229, -86.27378 43.12103, -86.54122 43.66318, -86.51852 44.05362, -86.27187 44.35123, -86.25853 44.70073, -85.61013 45.19653, -85.52601 44.76316, -85.12038 45.56977, -84.72414 45.78029, -84.1059 45.49874, -83.49585 45.36079, -83.28085 44.70317, -83.35699 44.33512, -83.91839 43.91698, -83.6992 43.59962, -83.32606 43.94045, -82.94021 44.06995, -82.61856 43.78785, -82.41992 42.97243, -83.48276 41.72508, -82.54894 41.39129, -81.73865 41.4911, -81.36243 41.72424, -79.76347 42.26727, -78.85944 42.79269, -79.06247 43.26816, -78.4649 43.37194, -77.57599 43.24149, -76.91484 43.27853, -76.22311 43.55408, -76.12942 43.93215, -76.36321 44.0983, -75.3292 44.81057, -74.73648 44.99287, -71.50584 45.01331, -71.29771 45.29345, -70.95986 45.33882, -70.25445 45.89896, -70.30533 46.06662, -69.98546 46.69133, -69.23079 47.4533, -68.89539 47.18222, -68.23132 47.35211, -67.79155 47.06096, -67.80398 45.67805, -67.43986 45.5925, -67.47851 45.28021, -66.96985 44.82858, -68.13681 44.47516, -68.42911 44.46523, -68.55996 44.25981, -68.9597 44.43026, -69.21965 43.94671, -70.15713 43.78973, -70.81438 42.86697, -70.59371 42.64621, -71.03467 42.28553, -70.77511 42.24854, -70.53823 41.80566, -69.95496 41.67138, -70.66541 41.55602, -70.62028 41.73553, -71.20045 41.46321, -71.19932 41.6784, -71.39408 41.76106, -71.49039 41.39198, -72.90719 41.26997, -73.65358 40.9983, -74.11594 40.70552, -74.27932 40.5142, -73.97886 40.32351, -74.17184 39.71815, -74.87669 38.95657, -75.59019 39.46377, -75.08314 38.79981, -75.046 38.44949, -75.89711 37.36739, -75.69608 37.82452, -75.79417 38.2636, -76.29427 38.43694, -75.9788 39.39455, -76.36403 39.39328, -76.54913 38.75897, -76.33017 38.0457, -76.86418 38.39135, -76.93646 38.20247, -76.2592 37.89003, -76.27519 37.33032, -76.50719 36.86947, -75.99536 36.92313, -75.94193 36.29434, -76.69015 36.04961, -75.74896 35.86934, -76.18162 35.34153, -76.98319 35.4365, -76.50713 35.24877, -76.91311 34.93647, -76.31471 34.94881, -76.62531 34.71975, -77.05053 34.69892, -77.53863 34.45701, -78.03481 33.91429, -78.57972 33.88199, -79.9968 32.60561, -80.86735 32.53251, -80.78073 32.24792, -81.52856 31.1309, -81.5183 30.55598, -81.3167 29.82899, -80.74741 28.39871, -80.05115 26.79686))'::geometry)
)
,us_city(name, geom) AS (VALUES
   ('Boston',       'POINT(-71.02 42.34)'::geometry)  
  ,('New York',     'POINT(-73.94 40.66)'::geometry)  
  ,('Philadelphia', 'POINT(-75.13 40.01)'::geometry)  
  ,('Chicago',      'POINT(-87.68 41.84)'::geometry) 
  ,('Miami',        'POINT(-80.21 25.78)'::geometry) 
  ,('Washington',   'POINT(-77.02 38.9)'::geometry) 
  ,('Atlanta',      'POINT(-84.42 33.76)'::geometry) 
  ,('Houston',      'POINT(-95.39 29.79)'::geometry) 
  ,('Dallas',       'POINT(-96.77 32.79)'::geometry) 
  ,('Denver',       'POINT(-104.88 39.76)'::geometry) 
  ,('Salt Lake City','POINT(-111.93 40.78)'::geometry) 
  ,('Phoenix',      'POINT(-112.09 33.57)'::geometry) 
  ,('Los Angeles',  'POINT(-118.41 34.02)'::geometry) 
  ,('San Francisco','POINT(-121.81 37.3)'::geometry) 
  ,('Seattle',      'POINT(-122.35 47.62)'::geometry)
)
,buf(dist, clr) AS (VALUES 
     (0.5,  '#ffffff')
    ,(2,    '#ddddff')
    ,(4,    '#bbbbff')
    ,(6,    '#9999ff')
    ,(8,    '#7777ff')
    ,(10,   '#5555ff')
    ,(12,   '#4444ff')
    ,(15,   '#0000a0') )
,city_buf AS (SELECT ST_Buffer(c.geom, b.dist) AS geom, dist, clr
    FROM us_city c CROSS JOIN buf b)
,all_buf AS (SELECT dist, ANY_VALUE(clr) AS clr, 
        ST_Union(geom) AS geom
    FROM city_buf GROUP BY dist)
,clip_usa AS (SELECT dist, clr, ST_Intersection(b.geom, us.geom) AS geom
    FROM all_buf b CROSS JOIN usa us)
,shapes AS (
    SELECT geom, dist, svgShape( geom,
    style => svgStyle(  --'stroke', '#ffffff',
                        --'stroke-width', 0.0::text,
                        --'stroke-linejoin', 'round',
                        'fill', clr,
                        'filter', 'url(#white-glow)') )
    svg FROM clip_usa ORDER BY dist DESC 
)
SELECT svgDoc( array_agg( svg ),
    viewbox => svgViewbox( ST_Expand( ST_Extent(geom), 2)),
    def => '<filter id="white-glow">'
    || '<feFlood result="flood" flood-color="#333377" flood-opacity="1"></feFlood>'
    || '<feComposite in="flood" result="mask" in2="SourceGraphic" operator="in"></feComposite>'
    || '<feMorphology in="mask" result="dilated" operator="dilate" radius="0.1"></feMorphology>'
    || '<feGaussianBlur in="dilated" result="blurred" stdDeviation="0.2"></feGaussianBlur>'
    || '<feMerge><feMergeNode in="blurred"></feMergeNode><feMergeNode in="SourceGraphic"></feMergeNode></feMerge>'
    || '</filter>'
  ) AS svg FROM shapes;
